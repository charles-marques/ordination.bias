101repo§ EmpComparator.java§ 	public int compare(EmployeeItem o1, EmployeeItem o2) {
2way-sql-parser§ ClioneSQLTest.java§         assertThat(join(sql), is("select * employee"));
2way-sql-parser§ DomaTest.java§         assertThat(result.sql, is("select * employee"));
2way-sql-parser§ MirageTest.java§         assertThat(ctx.getSql(), is("select * employee"));
360-Engine-for-Android§ GroupsTableTest.java§ 				&& gi1.mUserId.compareTo(gi2.mUserId) != 0) {
360§ Main.java§                             if( s.userSaves[i].uName.compareTo(d.uName) == 0 ) {
360§ puzzleSelectorFrame.java§                         if( lookfor.compareTo(s.userSaves[i].uSaveName) == 0 ) {
360§ puzzleSelectorFrame.java§                 if( s.userSaves[i].uName.compareTo(d.uName) == 0 ) {
64pixels§ CraftrServer.java§ 				int t = clients[i].nick.toLowerCase().compareTo(nick.toLowerCase());
AnyMemo§ MemoScreen.java§      * When the user select the undo from the menu
AnyMemo§ SettingsScreen.java§                 // Create a AlertDialog for user to select fields display in HTML
AnyMemo§ SettingsScreen.java§         // Create a AlertDialog for user to select fields in field 1 (the question part).        
AnyMemo§ StudyActivity.java§      * When the user select the undo from the menu
AmDroid§ AmenDetailFragment.java§           //TODO: show hellno form here to let user select different objekt
Aion-unique§ CM_TARGET_SELECT.java§  * If client want's to select target - d is object id.<br>
Aion-unique§ CM_TARGET_SELECT.java§ 	 * Target object id that client wants to select or 0 if wants to unselect
Aion-unique§ Captor.java§         PacketSamurai.getUserInterface().log("Please select the active protocols for Sniffing, non active protocols are used for opening old logs.");
AndroidLabs§ SummaryActivity.java§  * Menu screen which allows the user to select whichever banking activity they'd like to perform.
Aion-Energy-Life-§ CM_TARGET_SELECT.java§  * If client want's to select target - d is object id.<br>
Aion-Energy-Life-§ CM_TARGET_SELECT.java§ 	 * Target object id that client wants to select or 0 if wants to unselect
Aion-Energy-Life-§ Captor.java§         PacketSamurai.getUserInterface().log("Please select the active protocols for Sniffing, non active protocols are used for opening old logs.");
Appirater-for-Android§ Appirater.java§     * Once the rating alert is presented to the user, they might select 'Remind
Arduino§ Editor.java§    * of the selection. That is, if the user clicks and drags to select lines
AlarmApp-Android§ AlarmStatusActivity.java§ 		public int compare(AlarmedUser lhs, AlarmedUser rhs) {
AlarmApp-Android§ AlarmStatusActivity.java§ 		Collections.sort(usersList, AlarmedUserData.StatusComparator);
AlarmApp-Android§ AlarmedUserData.java§ 		public int compare(AlarmedUser lhs, AlarmedUser rhs) {
AndroidLab§ LDAPClient.java§  * servers, and allows the user to select a server, create a new server, or edit
AntiChess§ HumanPlayer.java§                //user to select the piece they want.
AU-AD§ CM_TARGET_SELECT.java§  * If client want's to select target - d is object id.<br>
AU-AD§ CM_TARGET_SELECT.java§ 	 * Target object id that client wants to select or 0 if wants to unselect
AOKP-I777§ Environment.java§      * in the list of podcasts that the user can select (not as regular
AOKP-I777§ Environment.java§      * in the list of ringtones that the user can select (not as regular
AOKP-I777§ Environment.java§      * in the list of alarms that the user can select (not as regular
AOKP-I777§ Environment.java§      * in the list of notifications that the user can select (not as regular
AOKP-I777§ ComposeMessageActivity.java§         // user is able to select a large number of recipients from the Contacts. The coming
AOKP-I777§ BandMode.java§  * After user select one band, it will send the selection to baseband.
AOKP-I777§ BandMode.java§  * It will alter user the result of select operation and exit, no matter success
AOKP-I777§ DisplaySettings.java§                 // maxTimeout. The user can still select anything less than maxTimeout.
AOKP-I777§ SecuritySettings.java§                 // maxTimeout. The user can still select anything less than maxTimeout.
AOKP-I777§ ChooseAccountActivity.java§  * Activity asking a user to select an account to be set up.
AOKP-I777§ WifiSettingsForSetupWizardXL.java§             // We clean up the current connectivity status and let users select another network
AlarmClock§ AlarmEdit.java§ 	 * Listens for user's key press to open the time dialog picker to select the alarm time.
AlarmClock§ AlarmEdit.java§ 	 * Listens for user's key press to open the repeat day picker to select the alarm day.
AndroidSQLLiteOrm§ QueryParser.java§  * {@code "select * from Person where [age] = ?"}<br />
AndroidSQLLiteOrm§ QueryParser.java§  * {@code "select * from Person where [dateOfBirth] < ?"}<br />
AndroidSQLLiteOrm§ QueryParser.java§  * {@code "select * from Person where [Person.height] > ?"}<br />
AndroidSQLLiteOrm§ QueryParser.java§  * {@code "select * from Person p, Address a where p.[Person.height] > ? and p.[Person] = a.[Address.person]"}<br />
AndroidSQLLiteOrm§ QueryParserTest.java§         final String input = "select * from Person";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String input = "select * from Person where FIRST_NAME = ?";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String input = "select * from Person where [firstName] = ?";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String expected = "select * from Person where FIRST_NAME = ?";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String input = "select * from Person where [firstName] = ? and [age] < ?";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String expected = "select * from Person where FIRST_NAME = ? and AGE < ?";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String input = "select * from Person where [Person.firstName] = ?";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String expected = "select * from Person where FIRST_NAME = ?";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String input = "select * from Person where [Person.firstName] = ? and [Person.age] < ?";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String expected = "select * from Person where FIRST_NAME = ? and AGE < ?";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String input = "select * from Person where [abcdef] = ?";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String input = "select * from Person where [age] = ?";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String input = "select * from Person where [Address.age] = ?";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String input = "select * from Person p, Address a where p.[lastName] = ? and p.[Person.id]=a.[Address.person]";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String expected = "select * from Person p, Address a where p.LAST_NAME = ? and p.PERSON_ID=a.PERSON_ID";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String input = "select * from Person p, Address a where p.[Person]=a.[Address.person]";
AndroidSQLLiteOrm§ QueryParserTest.java§         final String expected = "select * from Person p, Address a where p.PERSON_ID=a.PERSON_ID";
AussieWeatherRadar§ AussieWeatherRadar.java§ 		// have the user select a station on the map first if they
Android-File-Manager§ EventHandler.java§ 	 * Indicates whether the user wants to select 
Android-File-Manager§ EventHandler.java§ 	 * This private method is used to display options the user can select when
Android-File-Manager§ Main.java§     	 * If the user has multi-select on, we just need to record the file
Agot-Java§ ConnectionCreate.java§      * Main program begins here. Asks the user to select the map then runs the
Agot-Java§ PolygonGrabber.java§ 	 * Asks the user to select the map then runs the
ATReference§ ArchDescriptionNamesFields.java§      * user tries to select the empty function it can be reset
Aion-Extreme§ CM_TARGET_SELECT.java§  * If client want's to select target - d is object id.<br>
Aion-Extreme§ CM_TARGET_SELECT.java§ 	 * Target object id that client wants to select or 0 if wants to unselect
AP2DX§ Cache_JMockit_Test.java§    // abstraction (separated interface), AND client code is expected to be able to select or switch between such
ACLS-protocol-library§ AccountRequest.java§  * requests select the account that the user is going to use from the list
ACLS-protocol-library§ LoginResponse.java§  * the logged in user's name and organization, a list of accounts to select from,
ACLS-protocol-library§ LoginResponse.java§      * @return a list of the accounts that the user can select from for
Assignment-6-Project§ DayScrollPane.java§  *allows the user to select an event and either edit or delete that event
AllBinary-Platform§ AuthenticationTag.java§                     if(userName==null || userName.compareTo("")==0)
AllBinary-Platform§ AuthenticationTag.java§                     if(sessionUserName==null || sessionUserName.compareTo("")==0)
AllBinary-Platform§ AuthenticationTag.java§                     if ((userName == null || userName.compareTo("") == 0)
AllBinary-Platform§ AuthenticationTag.java§                         if (userName != null && userName.compareTo("") != 0 && password != null && password.compareTo("") != 0)
AllBinary-Platform§ AuthenticationHelper.java§             if (userName != null && userName.compareTo(StringUtil.getInstance().EMPTY_STRING) != 0
AllBinary-Platform§ AuthenticationHelper.java§                 if(this.role.compareTo(UserRoleData.INSTALLER)!=0)
AllBinary-Platform§ AuthenticationHelper.java§                 if (login.compareTo(allbinary.globals.GLOBALS.LOGINSUCCESS) == 0)
AllBinary-Platform§ AuthenticationRequestHelper.java§          if(userInterface.getMainEmail().compareTo(email) != 0)
AllBinary-Platform§ AuthenticationRequestHelper.java§                userInterface.getSecondaryEmail().compareTo(email) != 0)
AllBinary-Platform§ AuthenticationRequestHelper.java§          if(login.compareTo(allbinary.globals.GLOBALS.LOGINSUCCESS)==0)
AllBinary-Platform§ InstallerInfo.java§       if(this.userName != null && this.userName.compareTo(userName)==0 &&
AllBinary-Platform§ BasicUserRole.java§          if(role.compareTo(userRole.toString()) == 0)
AllBinary-Platform§ FileAuthenticationTag.java§             if (userName != null && userName.compareTo(StringUtil.getInstance().EMPTY_STRING) != 0 && password != null && password.compareTo(StringUtil.getInstance().EMPTY_STRING) != 0)
AllBinary-Platform§ FileAuthenticationTag.java§                 if (login.compareTo(allbinary.globals.GLOBALS.LOGINSUCCESS) == 0)
AllBinary-Platform§ FileAuthenticationTag.java§                     if(userName==null || userName.compareTo("")==0)
AllBinary-Platform§ FileAuthenticationTag.java§                     if(sessionUserName==null || sessionUserName.compareTo("")==0)
AllBinary-Platform§ FileAuthenticationTag.java§                     if ((userName == null || userName.compareTo("") == 0)
AllBinary-Platform§ FileAuthenticationTag.java§                         if (userName != null && userName.compareTo(StringUtil.getInstance().EMPTY_STRING) != 0
AllBinary-Platform§ UserRoleB.java§             if(role.compareTo(userRole.toString()) == 0)
AllBinary-Platform§ AddValidationUserView.java§             stringBuffer.append("The User Name you selected is already in use.<br/>  Please select another User Name.<br />");
AllBinary-Platform§ AddValidationUserView.java§             stringBuffer.append("The User Name you selected is already in use.<br/>  Please select another User Name.<br />");
AllBinary-Platform§ UserEntity.java§          if(this.login(userName,password).compareTo(allbinary.globals.GLOBALS.LOGINSUCCESS)==0)
AllBinary-Platform§ UserEntity.java§             isUserNameAndPasswordCorrect = result.compareTo(new SuperCrypt(new Integer(encryption).intValue()).encrypt(password));
AllBinary-Platform§ StoreFront.java§             || columnName.compareTo(UserData.MAINEMAIL) == 0)
AllBinary-Platform§ AbeClientLicense.java§      * if(isNew.compareTo(AbeClientInformation.ISNEW)==0) return true; else
ActionBarSherlock§ LoaderCursorSupport.java§             String select = "((" + People.DISPLAY_NAME + " NOTNULL) AND ("
Archimedes§ FilletCommand.java§      *            The point clicked by the user to select the first element
Archimedes§ FilletCommand.java§      *            The point clicked by the user to select the second element
AgendaNortev§ DadosPessoaisDAO.java§     private final String selectSQL = "select * from DadosPessoais where id = 1";
Artemis§ EditMenu.java§       // reset the select so that the user can see what it was
Artemis§ SelectMenu.java§    *  Warn if the user tries to select more than this number of features.
Anki-Android-Test§ SyncTestCase.java§ 		assertTrue(((String)client.sync()[0]).compareTo("noChanges") == 0);
Anki-Android-Test§ SyncTestCase.java§ 		assertTrue(((String)client.sync()[0]).compareTo("fullSync") == 0);
Anki-Android-Test§ SyncTestCase.java§ 		assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§ 		assertTrue(((String)client.sync()[0]).compareTo("noChanges") == 0);
Anki-Android-Test§ SyncTestCase.java§ 		assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§ 		assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§ 			assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§ 			assertTrue(((String)client.sync()[0]).compareTo("fullSync") == 0);
Anki-Android-Test§ SyncTestCase.java§ 		assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§ 		assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§ 		assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§ 			assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§ 		assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§ 		assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§ 		assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§ 			assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§ 			assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§         assertTrue(((String)client2.sync()[0]).compareTo("noChanges") == 0);
Anki-Android-Test§ SyncTestCase.java§             assertTrue(((String)client2.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§         assertTrue(((String)client.sync()[0]).compareTo("success") == 0);
Anki-Android-Test§ SyncTestCase.java§         assertTrue(((String)client2.sync()[0]).compareTo("success") == 0);
AusyPlay§ BookCtrl.java§ 						connectedUserBooks).addOrderByCondition("book.number")
AusyPlay§ SerieCtrl.java§ 		List<Serie> userSeries = Serie.find("select distinct s " +
AusyPlay§ SerieCtrl.java§ 				"where ob.owner.id = (:userId) order by s.name")
AusyPlay§ SerieCtrl.java§ 		List<Book> booksInSerieForUser = Serie.find("select bb from OwnedBook ob join ob.baseBook bb join bb.serie s " +
AusyPlay§ SerieCtrl.java§ 		"where s = (:serie) and ob.owner.id = (:userId) order by bb.number")
AusyPlay§ JPQLHelper.java§ 	 * Adds the order by condition. You don't need to specify "order by" in your statement, just set "user.name" for instance.
BroadleafCommerce§ AdminExporter.java§      * The friendly name of this exporter to display to the user to select from
BroadleafCommerce§ ProductOption.java§      * Gets the available values that a user can select for this ProductOption.
BroadleafCommerce§ FulfillmentOption.java§      * Set the display name for this option that will be shown to the user to select from
BroadleafCommerce§ FulfillmentOption.java§      * Sets the long description for this option to show to the user when they select an option
BroadleafCommerce§ FulfillmentPricingProvider.java§      * @param option - the candidate option a user might select based on the estimate
BroadleafCommerce§ AdminPresentationMap.java§      * <p>Optional - only required when the user should select from a list of pre-defined
BroadleafCommerce§ AdminPresentationMap.java§      * <p>Specify the keys available for the user to select from</p>
BroadleafCommerce§ AdminPresentationMap.java§      * <p>Optional - only required when the user should select from a list of database
BroadleafCommerce§ AdminPresentationMap.java§      * <p>Optional - only required when the user should select from a list of database
BroadleafCommerce§ AdminPresentationMap.java§      * <p>Optional - only required when the user should select from a list of database
BitNomen§ ContentExplorer.java§ 						Log.fine("the user did not select a file");
BitNomen§ GroupManagerGUI.java§ 	 * Display the basic view in which the user can select a group to edit.
BitNomen§ UserSelector.java§ 		pleaseSelect.setText("Please select a user: ");
Bianca§ PostgresModule.java§       // to the client what table maps to a particular select item
BitMate§ NonBlockingReadWriteService.java§       			write_selector.resumeSelects( client.getSocketChannel() );  //we need to resume since write selects are auto-paused after select op
BitMate§ PiecePickerImpl.java§ 	/** user select prioritize first/last */
BitMate§ SelectableSpeedMenu.java§         	if (value < 5) {continue;} // Don't allow the user to easily select slow speeds.
BitMate§ ClientStatsView.java§ 				Arrays.sort(stats, new Comparator<ClientStatsDataSource>() {
BitMate§ ClientStatsView.java§ 					public int compare(ClientStatsDataSource o1, ClientStatsDataSource o2) {
BitMate§ ClientStatsView.java§ 				Arrays.sort(stats, new Comparator<ClientStatsDataSource>() {
BitMate§ ClientStatsView.java§ 					public int compare(ClientStatsDataSource o1, ClientStatsDataSource o2) {
BitMate§ ClientStatsView.java§ 				Arrays.sort(stats, new Comparator<ClientStatsDataSource>() {
BitMate§ ClientStatsView.java§ 					public int compare(ClientStatsDataSource o1, ClientStatsDataSource o2) {
BitMate§ ClientStatsView.java§ 				Arrays.sort(stats, new Comparator<ClientStatsDataSource>() {
BitMate§ ClientStatsView.java§ 					public int compare(ClientStatsDataSource o1, ClientStatsDataSource o2) {
BitMate§ TableViewSWTImpl.java§ 		// Deselect rows if user clicks on a blank spot (a spot with no row)
BitMate§ TableViewSWTImpl.java§ 	 *                  because of non-created rows when select user selects all
BitMate§ TabbedEntry.java§ 		// ensure show order by user execThreadLater
BitMate§ SideBarEntrySWT.java§ 		// ensure show order by user execThreadLater
BioInvIndex§ DBUnitTest.java§ 				ResultSet rs = stmt.executeQuery ( "select sys_context('USERENV', 'CURRENT_SCHEMA') CURRENT_SCHEMA from dual" );
BasicSearchEngine§ DocumentBrowser.java§  * Generate Index From .OUT File - This will allow the user to select a .OUT file to generate the index. When dealing with large files, this operation could 
BoofCV§ VisualizeScorePanel.java§  * Let's the user select which score type to use.
BoofCV§ VisualizeRegionDescriptionApp.java§  *  Allows the user to select a point and show the description of the region at that point
BoofCV§ UtilIO.java§ 	 * Opens up a dialog box asking the user to select a file.  If the user cancels
BoofCV§ SelectAlgorithmPanel.java§  * Provides a pull down list form which the user can select which algorithm to run.  After
BoofCV§ SelectRegionDescriptionPanel.java§  * Allows the user to select a point, its size, and orientation.  First the user clicks on a point
Book-Catalogue§ BookEditLoaned.java§  * Users can select a book and, from this activity, select a friend to "loan" the book to.
Book-Catalogue§ GoodreadsSearchResults.java§ 	 * Handle user clicking on a book. This should show editions and allow the user to select a specific edition.
Corisco§ EditGroupForm.java§  * Present the user with the group's current state. The user may select to 
Corisco§ EditGroupForm.java§  * change the group's name, OR search for new epeople / groups to add, OR select 
Corisco§ EditGroupForm.java§         Collections.sort(allMemberEPeopleIDs);
Corisco§ AddBitstreamForm.java§  * user can select the new bitstream's bundle (which is unchangable 
Corisco§ ResetPassword.java§  * Display a reset password form allowing the user to select a new password.
Corisco§ AuthenticatedSelector.java§  * administrators distinct from epersons that select must come first.
Corisco§ CCLicenseStep.java§ 	 * The creative commons URL, where to send the user off to so that they can select a license.
Corisco§ SelectCollectionStep.java§  * Allow the user to select a collection they wish to submit an item to, 
Corisco§ UnclaimTasksAction.java§  * tasks to the general pool for other users to select from.
Corisco§ Composite.java§      * the front end will provide a way for the user to select fields (probably
Corisco§ Composite.java§      * Add a menu input control which allows the user to select from a list of
Corisco§ Composite.java§      * Add a menu input control which allows the user to select from a list of
Corisco§ CheckBox.java§      * the front end will provide a way for the user to select fields (probably
Corisco§ File.java§  * user to select files from there local system to be uploaded to the server.
Corisco§ Field.java§  * file: An input control that allows the user to select files to be submitted
Corisco§ Field.java§  * select: A menu input control which allows the user to select from a list of
Corisco§ Params.java§      * the front end will provide a way for the user to select fields (probably
Corisco§ Radio.java§  * user to select one value among many. If the user selects one value then all
Corisco§ Radio.java§      * the front end will provide a way for the user to select fields (probably
Corisco§ RichTextContainer.java§      * Add an input control that allows the user to select files to be submitted
Corisco§ RichTextContainer.java§      * Add an input control that allows the user to select files to be submitted
Corisco§ RichTextContainer.java§      * Add a menu input control which allows the user to select from a list of
Corisco§ RichTextContainer.java§      * Add a menu input control which allows the user to select from a list of
Corisco§ Select.java§  * the user to select from a list of available options.
Corisco§ Select.java§      * Enable the user to select multiple options.
Corisco§ Select.java§      * Set whether the user is able to select multiple options.
Corisco§ Select.java§      * the front end will provide a way for the user to select fields (probably
Corisco§ TextArea.java§      * the front end will provide a way for the user to select fields (probably
Corisco§ Text.java§      * the front end will provide a way for the user to select fields (probably
Corisco§ SelectCollectionStep.java§         // if the user didn't select a collection,
Corisco§ UploadStep.java§             // Did the user select a format?
Corisco§ SelectGroupTag.java§  * <P>Tag for producing an e-person select widget in a form.  Somewhat
Corisco§ SelectEPersonTag.java§  * Tag for producing an e-person select widget in a form. Somewhat analogous to
Corisco§ SelectEPersonTag.java§             out.print("<table><tr><td colspan=\"2\" align=\"center\"><select multiple=\"multiple\" name=\"eperson_id\" size=\"");
Corisco§ SubmissionController.java§             // Work around for problem where people select "is a thesis", see
Corisco§ JSPUploadStep.java§         // load JSP which allows the user to select a file to upload
Corisco§ JSPUploadStep.java§         // load JSP which allows the user to select a file to upload
Corisco§ JSPSelectCollectionStep.java§             // the "Please select a collection" message to the user
Corisco§ JSPSelectCollectionStep.java§         // if the user didn't select a collection,
CQ2-Sim§ SimstatsExtension.java§ 			powerSpent  = getStats("select sum(amount), userid from PowerspellLog as pspl group by userid order by sum(amount) desc");
CQ2-Sim§ SimstatsExtension.java§ 			powerSpells = getStats("select count(*), userid from PowerspellLog as pspl group by userid order by count(*) desc");
CQ2-Sim§ SimstatsExtension.java§ 			forumPosts  = getStats("select count(*), user from Post as post group by userid order by count(*) desc");
CQ2-Sim§ SimstatsExtension.java§ 			loggedIn    = getStats("select count(*), userid from Simlog as log where log.action = :parameter1 group by userid order by count(*) desc", "LOGIN");
CQ2-Sim§ SimstatsExtension.java§ 			mostSupport = getStats("select sum(amount), fromUser from Support as s group by fromUser order by sum(amount) desc");
CQ2-Sim§ SimstatsExtension.java§ 			leastSupport= getStats("select sum(amount), fromUser from Support as s group by fromUser order by sum(amount) asc");
CQ2-Sim§ SimstatsExtension.java§ 			revealsInserted= getStats("select count(*), user from News as news where news.newsfor = :parameter1 group by userid order by count(*) desc", "Reveal");
CQ2-Sim§ SimstatsExtension.java§ 			traveled    = getStats("select count(*), userid from Simlog as log where log.action = :parameter1 group by userid order by count(*) desc", "TRAVELCALCAUTH");
CQ2-Sim§ SimstatsExtension.java§ 			curses      = getStats("select count(*), user from News as news where news.newsfor = :parameter1 group by userid order by count(*) desc", "Curse");
CQ2-Sim§ SimstatsExtension.java§ 			travelrecord= getStats("select travelgain, user from User as user order by travelgain desc");
CQ2-Sim§ SimstatsExtension.java§ 			raidrecord  = getStats("select raidgain, user from User as user order by raidgain desc");
CQ2-Sim§ SimstatsExtension.java§ 			raidloss    = getStats("select raidloss, user from User as user order by raidloss desc");
CQ2-Sim§ SimstatsExtension.java§ 			oldest		= getStats("SELECT floor((now()-birthday)/10000000000), user FROM User as user where birthday is not null and year(now()) > year(birthday) order by birthday asc");
CQ2-Sim§ SimstatsExtension.java§ 			youngest	= getStats("SELECT floor((now()-birthday)/10000000000), user FROM User as user where birthday is not null and year(now()) > year(birthday) and floor((now()-birthday)/10000000000) > 1 order by birthday desc");
CQ2-Sim§ SimstatsExtension.java§ 			resLost		= getStats("SELECT sum(totalres), user FROM RaidResult as rr where incoming = :parameter1 and totalres > 0 group by userid order by sum(totalres) desc", true);
CQ2-Sim§ SimstatsExtension.java§ 			resWon		= getStats("SELECT sum(totalres), user FROM RaidResult as rr where incoming = :parameter1 and totalres > 0 group by userid order by sum(totalres) desc", false);
CQ2-Sim§ SimstatsExtension.java§ 			gemsWon		= getStats("SELECT count(*), user FROM RaidResult as rr where incoming = :parameter1 and totalgem is not null group by userid order by count(*) desc", false);
CQ2-Sim§ SimstatsExtension.java§ 		Collections.sort(keys, new Comparator<User>() {
CQ2-Sim§ SimstatsExtension.java§ 			public int compare(User left, User right) {
CQ2-Sim§ SimstatsExtension.java§ 		Collections.sort(keys, new Comparator<User>() {
CQ2-Sim§ SimstatsExtension.java§ 			public int compare(User left, User right) {
CQ2-Sim§ PowerspellLog.java§ 			Query q = session.createQuery("select sum(amount), count(*) from PowerspellLog as pspl where pspl.userid = :userid");
CQ2-Sim§ Support.java§ 			Query q = session.createQuery("select sum(amount), count(*) from Support as s where s.fromUser = :user");
CQ2-Sim§ Topic.java§ 				"		select topicID from LastseenTopic as l where l.userID = :userid and l.lasttime >= t.lastedit" +
CQ2-Sim§ UserComparator.java§ 		public int compare(User o1, User o2) {
Crush-Metal-Management§ Test.java§ //    ResultSet rs = stat.executeQuery("select * from people;");
Crush-Metal-Management§ DailyChallanReport.java§         else {// if user select Cash
ClubManagement§ Notifications.java§ 			currentNotificationsQuery="select * from notifications where NotificationId IN (Select NotificationId from notificationmember where MemberId=' "+ login.currentMember.MemberId + "' OR MemberId='0');";
Cooking-to-Goal§ LoginPanel.java§         jLabel2.setText("Please select your user name to login.");
CMPT371Group02§ addUserServ.java§             out.println("<div style=\"color:red;\"> Please select a user type</div>");
CMPT371Group02§ userDAO.java§                 "select * from users where username='"
Clotho-Core§ Collector.java§             //If preference read failed, try asking the user to select an author
Clotho-Core§ Collector.java§      * Use this method to prompt the user to select the current user from a list
Clotho-Core§ Container.java§                 //Throw up a dialog and get user to select the collection stored as 'chosen'
Clotho-Core§ ObjBase.java§      * from which the user can select and press delete to call disposeEverywhere on those
Clotho-Core§ Part.java§      * from which the user can select and press delete to call disposeEverywhere on those
Clotho-Core§ ClothoSaveChooser.java§      * Meant for use in the case where user could select different filefilters
Clotho-Core§ digestMultiple.java§         //Throw up a dialog and get user to select the collection stored as 'chosen'
Clotho-Core§ connectCollectionView.java§         //Throw up a dialog and get user to select the collection stored as 'chosen'
Clotho-Core§ connect.java§         //Throw up a dialog and get user to select the collection stored as 'chosen'
Clotho-Core§ connect.java§         //Throw up a dialog and get user to select the collection stored as 'chosen'
Clotho-Core§ connect.java§         //Throw up a dialog and get user to select the collection stored as 'chosen'
Clotho-Core§ connect.java§         //Throw up a dialog and get user to select the collection stored as 'chosen'
Carolina-Digital-Repository§ UserManagementServiceImpl.java§ 			Collections.sort(users);
Carolina-Digital-Repository§ UserManagementServiceImpl.java§ 			Collections.sort(users);
Carolina-Digital-Repository§ UserManagementServiceImpl.java§ 			Collections.sort(users);
Caronas§ ControleDeAcessoImpl.java§ 			query = "select from " + Usuario.class.getName();
Crazy§ LoginDataIPComparator.java§ 	public int compare(final LoginData o1, final LoginData o2)
Crazy§ LoginDataLastActionComparator.java§ 	public int compare(final LoginData o1, final LoginData o2)
Crazy§ LoginDataNameComparator.java§ 	public int compare(final LoginData o1, final LoginData o2)
Crazy§ OnlineDataLastLoginComperator.java§ 		return o1.getLastLogin().compareTo(o2.getLastLogin());
Crazy§ OnlineDataFirstLoginComperator.java§ 		return o1.getFirstLogin().compareTo(o2.getFirstLogin());
Conf4you§ ConferencesUsersDao.java§ 					"select cu from  ConferencesUsers cu where cu.conference = :conf")
Conf4you§ ConferencesUsersDao.java§ 					"select cu from  ConferencesUsers cu join fetch cu.user user where cu.conference = :conf and user.lastLogin >= :loginDate ")
Conf4you§ ConferencesUsersDao.java§ 			query = "select cu from ConferencesUsers cu left join fetch cu.conference conf where cu.user = :user and conf.endDate >= :now";
Conf4you§ ConferencesUsersDao.java§ 			query = "select cu from  ConferencesUsers cu where cu.user = :user";
Conf4you§ ConferencesUsersDao.java§ 		String query = "select conf from ConferencesUsers cu left join cu.conference conf where cu.user = :user and cu.userRole = :userRole and conf.endDate >= :now";
Conf4you§ ConferencesUsersDao.java§ 		String query = "select conf from ConferencesUsers cu left join cu.conference conf where cu.user = :user and and conf.endDate >= :now";
Conf4you§ ConferencesUsersDao.java§ 					"select cu from  ConferencesUsers cu where cu.conference = :conf and cu.userRole = :userRole")
Conf4you§ ConferencesUsersDao.java§ 					"select cu from  ConferencesUsers cu where cu.conference = :conf and cu.user = :user")
Conf4you§ ConferencesUsersDao.java§ 					"select u from User u where u.admin != 1 and not exists (select 1 from ConferencesUsers cu where cu.user = u and cu.conference = :conf)")
Conf4you§ ConferencesUsersDao.java§ 					"select cu from  ConferencesUsers cu where cu.user = :user")
Conf4you§ ConferencesUsersDao.java§ 					query.append(" where c.active = 1 and exists (select 1 from ConferencesUsers cu where cu.user = :user and cu.conference = c and (cu.userRole = 3 or cu.userRole = 4)) order by c.startDate");
Conf4you§ ConferencesUsersDao.java§ 					query.append(" and exists (select 1 from ConferencesUsers cu where cu.user = :user and cu.conference = c and (cu.userRole = 3 or cu.userRole = 4)) order by c.startDate");
Conf4you§ ConferencesUsersDao.java§ 					"select cu.user from  ConferencesUsers cu where cu.conference = :conf and cu.userRole = :userRole")
Conf4you§ ConferencesUsersDao.java§ 					"select cu.userRole from  ConferencesUsers cu where cu.conference = :conf and cu.user = :user")
Conf4you§ ConferencesUsersDao.java§ 					"select cu.user from  ConferencesUsers cu where cu.conference = :conf and cu.attendanceStatus = :attendanceStatus")
Conf4you§ ConferencesParticipantsDao.java§ 					"select cp from  ConferencesParticipants cp where cp.conferenceId=:conferenceId and cp.userId=:userId and cp.date=:date")
Conf4you§ ConferencesParticipantsDao.java§ 					"select cp.user from ConferencesParticipants cp where cp.conference = :conf and cp.date=:date")
Conf4you§ UserDao.java§ 					"select u from User u left outer join u.company where u.company.companyID=:companyId")
Conf4you§ UserDao.java§ 					"select u from User u left outer join u.company where u.company.name=:companyName")
Conf4you§ UserDao.java§ 					"select u from User u left outer join u.company where u.company.companyType=:companyType")
CIDE§ RegisterScreen.java§ 			if (tempUser.compareTo("@") == 0) {
CIDE§ RegisterScreen.java§ 			if (tempUser.compareTo("@") == 0) {
CIDE§ RosterScreen.java§ 												.compareTo(XMPPClient.IQ_REGISTER) == 0) {
CIDE§ RosterScreen.java§ 				if (Contact.userhost(ithJid).compareTo(c.jid) == 0) {
CIDE§ SubscribeScreen.java§ 				if (Contact.userhost(ithC.jid).compareTo(c.jid) == 0) return false;
CTP§ Installer.java§ 	 * introducing the program, allows the user to select an install directory,
CTP§ Installer.java§ 	//Let the user select an installation directory.
CommunityCase§ CheckoutProcess.java§    * If true, the quick process is being used, and user is not offered to select changes
CalicoServer§ ClientThread.java§ 					&& ClientManager.getClientThread(clientIds[i]).getClient().getUsername().compareTo(client.getUsername()) == 0)
CommitCoin§ PeerGroup.java§             // user when doing lots of work, like downloading the block chain. We select a priority level one lower
Course-Master§ User.java§                     JSONObject rspObj = DatabaseConnectionManager.executeQuery("select id, fullname, email, role from user where id = " + id);
Course-Master§ User.java§                 JSONObject rspObj = DatabaseConnectionManager.executeQuery("select id, fullname, email, role from user;");
Course-Master§ User.java§                     JSONObject userPoll = DatabaseConnectionManager.executeQuery("select * from user where id = " + id);
Course-Master§ DatabaseAuthenticator.java§             JSONObject rsp = DatabaseConnectionManager.executeQuery("select * from user where email = '" + email + "'");
Course-Master§ Discussion.java§                 "select topic.id, topic.name, user.fullname postedBy, root.dte postedOn, " +
Cream§ Users.java§         JcrQueryResult result = Recipe.findBy("author = %s order by [jcr:created] desc", user.uuid);
CalicoClient§ Calico.java§ 				else if (args[i].compareTo("-defaultusername") == 0)
CalicoClient§ BubbleMenu.java§ 			if (buttonClassname.compareTo("calico.plugins.userlist.UserImageCreate") == 0)
Conference§ DirectAction.java§ 				if (attendee.userPassword() != null && attendee.userPassword().compareTo(userPassword) == 0) {
CosasDeBugDeveloper§ BuscarPersona.java§ 					String query = "select id, nombre||' '||apaterno||' '||amaterno, email from persona where upper("+parametro+") like upper('%"+textoABuscar+"%')";
CosasDeBugDeveloper§ ModificarPersona.java§ 		String query = "select nombre,apaterno,amaterno,email,sexo,date(fechaNacimiento)  from persona where id = "+idDeLaPersona;
ClientesApp§ ClientesApp.java§         //TypedQuery<Cliente> q=ClientesApp.getClienteC().getEntityManager().createQuery("select e from Cliente as e where e.apellido='gel'",Cliente.class);
CXTestFramework§ D3CampaignSegmentationTest.java§ 					@Step(when = { "select months by clicking on up and down arrow" }, then = "Users should be able to select months from months list box."),
Common-Sense-Net-2§ ActionDataFactory.java§ 			// if user does not have a plot, select ground nut (id = 1)
Common-Sense-Net-2§ ActionDataFactory.java§ 			// if user doesn't have a plot, select TMV2 (id = 4)
Cm9-patch-Galaxy§ ContactsContract.java§          * Starts an Activity that lets the user select the multiple phones from a
ChenSun§ ResultSetRegressionTest.java§ 				.executeQuery("select firstName as 'first person' from bug49516");
ChenSun§ ResultSetRegressionTest.java§ 				.executeQuery("select firstName as 'first person' from bug49516");
ChenSun§ StatementRegressionTest.java§ 					.clientPrepareStatement("select {d '1997-05-24'} FROM testBug15141");
ChenSun§ StatementRegressionTest.java§ 			String select_sql = "select user0_.userName as userName0_0_, user0_.ivalue as ivalue0_0_, user0_.CNAME as CNAME0_0_, user0_.bvalue as bvalue0_0_, user0_.svalue as svalue0_0_, user0_.ACTIVE as ACTIVE0_0_ from X_TEST user0_ where user0_.userName like ?";
ChenSun§ DatabaseAdmin.java§ 			if (username1.compareTo(username2) < 0) {
ChenSun§ DatabaseAdmin.java§ 			if (username1.compareTo(username2) > 0) {
ChenSun§ DatabaseAdmin.java§ 			if (username1.compareTo(username2) < 0) {
ChenSun§ DatabaseAdmin.java§ 			if (username1.compareTo(username2) > 0) {
ChenSun§ ResultSetRegressionTest.java§ 				.executeQuery("select firstName as 'first person' from bug49516");
ChenSun§ ResultSetRegressionTest.java§ 				.executeQuery("select firstName as 'first person' from bug49516");
ChenSun§ StatementRegressionTest.java§ 					.clientPrepareStatement("select {d '1997-05-24'} FROM testBug15141");
ChenSun§ StatementRegressionTest.java§ 			String select_sql = "select user0_.userName as userName0_0_, user0_.ivalue as ivalue0_0_, user0_.CNAME as CNAME0_0_, user0_.bvalue as bvalue0_0_, user0_.svalue as svalue0_0_, user0_.ACTIVE as ACTIVE0_0_ from X_TEST user0_ where user0_.userName like ?";
ChenSun§ ServerInputProcessor.java§ 				if (username.compareTo(acappellaResult.getString("username")) < 0) {
ChenSun§ ServerInputProcessor.java§ 				} else if (username.compareTo(acappellaResult.getString("username")) > 0) {
ChenSun§ ServerInputProcessor.java§ 			if (user.compareTo(approvedUsers[i]) < 0) {
ChenSun§ ServerInputProcessor.java§ 				if (username.compareTo(acappellaResult.getString("username")) < 0) {
ChenSun§ ServerInputProcessor.java§ 				} else if (username.compareTo(acappellaResult
ChenSun§ ServerInputProcessor.java§ 			if (user.compareTo(approvedUsers[i]) < 0) {
CMM-data-grabber§ Eccles.java§                         "order by f.loginTime desc", 
CMM-data-grabber§ UserDetailsManager.java§                     "select u.userName from UserDetails u", String.class);
CMM-data-grabber§ FacilityStatusManager.java§                     "order by s.loginTime desc", FacilitySession.class);
CMM-data-grabber§ FacilityStatusManager.java§                     "order by s.loginTime desc", FacilitySession.class);
CMM-data-grabber§ FacilityStatusManager.java§                         "order by s.loginTime asc", FacilitySession.class);
CMM-data-grabber§ FacilityStatusManager.java§                 "order by s.loginTime desc", FacilitySession.class);
CS225FinalProject§ DataIO.java§ 			// can allow user to select file if file not found?
CS225FinalProject§ DataIO.java§ 			// can allow user to select file if file not found?
CS225FinalProject§ DataIO.java§ 			// can allow user to select file if file not found?
ClaimBlame§ BlameAction.java§         Collections.sort(allUsers);
ClaimBlame§ CulpritAssignment.java§ 		Collections.sort(allUsers);
Cream_1§ CustomerForm.java§             emplocrit.addAscendingOrderByColumn(EmployeeNoCategoryPeer.EMPLOYEE_NO_CAT_NAME);
Cream_1§ TaskForm.java§             usrcrit.addAscendingOrderByColumn(CreamUserPeer.LOGIN_NAME);
Cream_1§ BaseIndustry.java§      * The criteria used to select the current contents of collCustomers
Cream_1§ BaseLeadSource.java§      * The criteria used to select the current contents of collCustomers
Cream_1§ BaseCustomerCategory.java§      * The criteria used to select the current contents of collCustomers
Cream_1§ BaseLanguage.java§      * The criteria used to select the current contents of collCustomers
Cream_1§ BaseEmployeeNoCategory.java§      * The criteria used to select the current contents of collCustomers
Cream_1§ BaseTurbineRole.java§      * The criteria used to select the current contents of collTurbineUserGroupRoles
Cream_1§ BaseRegion.java§      * The criteria used to select the current contents of collCustomersRelatedByRegionId
Cream_1§ BaseRegion.java§      * The criteria used to select the current contents of collCustomersRelatedByShiptoRegionId
Cream_1§ BaseCountry.java§      * The criteria used to select the current contents of collCustomersRelatedByCountryId
Cream_1§ BaseCountry.java§      * The criteria used to select the current contents of collCustomersRelatedByShiptoCountryId
Cream_1§ BaseTurbineUser.java§      * The criteria used to select the current contents of collTurbineUserGroupRoles
Cream_1§ BaseTurbineGroup.java§      * The criteria used to select the current contents of collTurbineUserGroupRoles
Cream_1§ BaseEducationCategory.java§      * The criteria used to select the current contents of collCustomers
Cream_1§ BaseAgeCategory.java§      * The criteria used to select the current contents of collCustomers
Cream_1§ BaseRevenueCategory.java§      * The criteria used to select the current contents of collCustomers
Cream_1§ BaseHouseholdCategory.java§      * The criteria used to select the current contents of collCustomers
CMSC424-WebProject§ Admin.java§ 								String name_query = "select first_name, last_name from customers where email = '"+email+"'";
CMSC424-WebProject§ Admin.java§ 					String availableDrivers = "select deliv_id from deliverypersons where curr_loc = 'store'";
CMSC424-WebProject§ AdminQuery.java§ 			String customerquery = "select c.email, c.address from customers c, transactions t "+
CMSC424-WebProject§ DriverLogin.java§ 			String driverQuery = "select password from deliverypersons where deliv_id = "+id;
CMSC424-WebProject§ Driver.java§ 						String getCustTotal = "select total_spent from customers where email = '"+email+"'";
COSsettings§ LockscreenStyleActivity.java§             //Launches intent for user to select an image/crop it to set as background
Cura§ AccountsListActivity.java§ 		// select all users.
Cura§ AccountsListActivity.java§ 		Cursor c = db.rawQuery("select * from user", null);
Cura§ AccountsListActivity.java§ 			if (userValue.compareTo(username) == 0
Cura§ LoginScreenActivity.java§  * application. Here is where we offer the user the ability to select a server account from the ones that they've added, add new ones or
Cura§ LoginScreenActivity.java§ 		// select all users.
Cura§ LoginScreenActivity.java§ 		Cursor c = db.rawQuery("select * from user", null);
Cura§ LoginScreenActivity.java§ 			if (userValue.compareTo(username) == 0
Cura§ TerminalActivity.java§ 		if (userTemp.getUsername().compareTo("root") == 0) {
Cura§ TerminalActivity.java§ 			if (userTemp.getUsername().compareTo("root") == 0) {
Cura§ LogsDialog.java§  * Description: This Activity is for the dialog creation that happens when a user chooses to select a certain chunk of data
Cura§ regexValidator.java§ 		if (username.compareTo("") == 0
CraftIRC3§ IRCChannelPoint.java§         Collections.sort(users, new NicknameComparator(this.bot));
CraftIRC3§ MinecraftPoint.java§         Collections.sort(users);
Core_1§ KeyedHandler.java§  * Map found = (Map) queryRunner.query("select id, name, age from person", h);
DimSim§ SettingsDialog.java§ 				if(rosterModel.getCurrentUser().getNetProfile().compareTo(networkProfile) != 0)
DimSim§ SettingsDialog.java§ 				//if(rosterModel.getCurrentUser().getImgQuality().compareTo(imageQuality) != 0)
DimSim§ DimDimSession.java§ //			return this.creationDate.compareTo(((UserSession)obj).getCreationDate());
DimSim§ ConferenceUser.java§ 			return	this.email.compareTo(((ConferenceUser)obj).getEmail());
DimSim§ ParticipantClientEventsManager.java§ 			return	id.compareTo(((ParticipantClientEventsManager)o).getId());
